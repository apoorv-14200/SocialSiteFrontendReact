{"version":3,"sources":["actions/actionTypes.js","reducers/posts.js","helper/urls.js","actions/auth.js","actions/posts.js","actions/comment.js","actions/likes.js","components/Comment.js","components/Post.js","components/CreatePost.js","components/PostsList.js","components/SearchResult.js","actions/search.js","components/Search.js","components/Navbar.js","actions/friends.js","components/Friend.js","components/FriendList.js","components/Footer.js","components/Home.js","components/Page404.js","components/Login.js","actions/Sign_up_auth.js","components/SignUp.js","actions/edit_profile.js","components/Settings.js","actions/profile.js","components/Profile.js","components/App.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/search.js","reducers/index.js","index.js","store/index.js"],"names":["UPDATE_POSTS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILED","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILED","AUTHENTICATE_USER","LOG_OUT","CLEAR_AUTH_STATE","EDIT_PROFILE_SUCCESS","EDIT_PROFILE_FAILED","USER_PROFILE_SUCCESS","USER_PROFILE_FAILED","USER_PROFILE_BEGIN","CLEAR_PROFILE_STATE","FETCH_USER_FRIENDS_SUCCESS","FETCH_USER_FRIENDS_FAILED","FETCH_USER_FRIENDS_BEGIN","ADD_FRIEND_FAILED","ADD_FRIEND_SUCCESS","ADD_FRIEND_BEGIN","REMOVE_FRIEND_FAILED","REMOVE_FRIEND_SUCCESS","REMOVE_FRIEND_BEGIN","CLEAR_FRIEND_STATE","ADD_POST_SUCCESS","ADD_POST_FAILED","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILED","TOGGLE_LIKE_SUCCESS","TOGGLE_LIKE_FAILED","FETCH_SEARCH_USERS","CLEAR_SERACH","initialPostsState","posts","next","prev","error","ROOT_URL","URLS","fetchposts","page","limit","login","signup","editProfile","fetchProfile","id","fetchFriends","AddFriend","RemoveFriend","createPost","createComment","toggleLike","type","SearchUsers","text","url","URL","authorizeuser","data","console","log","dispatch","fetch","method","body","JSON","stringify","email","password","headers","then","response","json","success","localStorage","setItem","token","setTimeout","user","catch","err","logout","clearauthstate","updatePosts","content","getItem","Authorization","status","post","post_id","comment","create_comment_success","deleted","like","likeabletype","toggle_like_success","liketosent","Comment","this","props","className","name","src","likes","length","Component","connect","state","auth","Post","s","handleChange","e","target","value","setState","handleAddcomment","key","_id","handleToggleLike","isLikedByUser","i","liked","to","onClick","onChange","onKeyPress","onk","placeholder","map","CreatePost","post_content","handleSubmit","PostsList","isLoggedIn","SearchResult","result","searchResults","users","results","Search","search","Navbar","logOut","removeItem","friendships","friendship","clear_friend_state","remove_friend_success","removed_id","Friend","friend","FriendList","friends","inProgress","signeduser","from_user","to_user","Footer","handlenextclick","handleprevclick","Home","Page404","Login","handleEmailInput","handlePasswordInput","preventDefault","from","location","pathname","required","disabled","createuser","confirmpassword","SignUp","handleConfirmPasswordInput","handleNameInput","edit_user_profile","edit_profile_failed","Settings","val","fieldname","handleEdit","editmode","handleBack","fun","handleSave","profile_changed","Profile","handleAddfriend","userId","match","params","handleRemoveFriend","checkIsUserFriend","friendsuserids","fid","push","indexOf","prevProps","prevparam","curparam","isfriend","profileuser","profile","PrivateRoute","PrivateRouteProps","path","component","render","App","jwt_decode","AuthenticateUser","exact","initialAuthState","initialProfileState","initialFriendsState","initialSearchState","combineReducers","action","newPosts","newLikes","filter","store","createStore","reducer","applyMiddleware","logger","thunk","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ceb3b5.chunk.js","sourcesContent":["export const UPDATE_POSTS = 'UPDATE_POSTS';\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\r\n\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\r\n\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const CLEAR_AUTH_STATE = 'CLEAR_AUTH_STATE';\r\n\r\nexport const EDIT_PROFILE_SUCCESS = 'EDIT_PROFILE_SUCCESS';\r\nexport const EDIT_PROFILE_FAILED = 'EDIT_PROFILE_FAILED';\r\n\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS';\r\nexport const USER_PROFILE_FAILED = 'USER_PROFILE_FAILED';\r\nexport const USER_PROFILE_BEGIN = 'USER_PROFILE_BEGIN';\r\n\r\nexport const CLEAR_PROFILE_STATE = 'CLEAR_PROFILE_STATE';\r\n\r\nexport const FETCH_USER_FRIENDS_SUCCESS = 'FETCH_USER_FRIENDS_SUCCESS';\r\nexport const FETCH_USER_FRIENDS_FAILED = 'FETCH_USER_FRIENDS_FAILED';\r\nexport const FETCH_USER_FRIENDS_BEGIN = 'FETCH_USER_FRIENDS_BEGIN';\r\n\r\nexport const ADD_FRIEND_FAILED = 'ADD_FRIEND_FAILED';\r\nexport const ADD_FRIEND_SUCCESS = 'ADD_FRIEND_SUCESS';\r\nexport const ADD_FRIEND_BEGIN = 'ADD_FRIEND_BEGIN';\r\n\r\nexport const REMOVE_FRIEND_FAILED = 'REMOVE_FRIEND_FAILED';\r\nexport const REMOVE_FRIEND_SUCCESS = 'REMOVE_FRIEND_SUCESS';\r\nexport const REMOVE_FRIEND_BEGIN = 'REMOVE_FRIEND_BEGIN';\r\n\r\nexport const CLEAR_FRIEND_STATE = 'CLEAR_FRIEND_STATE';\r\n\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILED = 'ADD_POST_FAILED';\r\nexport const ADD_POST_BEGIN = 'ADD_POST_BEGIN';\r\n\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILED = 'ADD_COMMENT_FAILED';\r\n\r\nexport const TOGGLE_LIKE_SUCCESS = 'TOGGLE_LIKE_SUCCESS';\r\nexport const TOGGLE_LIKE_FAILED = 'TOGGLE_LIKE_FAILED';\r\n\r\nexport const FETCH_SEARCH_USERS = 'FETCH_SEARCH_USERS';\r\nexport const CLEAR_SERACH = 'CLEAR_SEARCH';\r\n","import {\r\n  ADD_COMMENT_FAILED,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILED,\r\n  ADD_POST_SUCCESS,\r\n  TOGGLE_LIKE_FAILED,\r\n  TOGGLE_LIKE_SUCCESS,\r\n  UPDATE_POSTS,\r\n} from '../actions/actionTypes';\r\nconst initialPostsState = {\r\n  posts: [],\r\n  next: null,\r\n  prev: null,\r\n  error: null,\r\n};\r\nexport default function posts(state = initialPostsState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_POSTS: {\r\n      return {\r\n        ...state,\r\n        posts: action.posts,\r\n        next: action.next,\r\n        prev: action.prev,\r\n        error: null,\r\n      };\r\n    }\r\n    case ADD_POST_SUCCESS: {\r\n      return {\r\n        posts: [action.post, ...state.posts],\r\n        error: false,\r\n      };\r\n    }\r\n    case ADD_POST_FAILED: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case ADD_COMMENT_SUCCESS: {\r\n      let newPosts = state.posts.map((post) => {\r\n        if (post._id == action.post_id) {\r\n          return {\r\n            ...post,\r\n            comment: [action.comment, ...post.comment],\r\n          };\r\n        }\r\n        return post;\r\n      });\r\n      return {\r\n        ...state,\r\n        posts: newPosts,\r\n        error: null,\r\n      };\r\n    }\r\n    case ADD_COMMENT_FAILED: {\r\n      return {\r\n        error: action.error,\r\n      };\r\n    }\r\n    case TOGGLE_LIKE_SUCCESS: {\r\n      if (action.likeabletype == 'Post') {\r\n        let newPosts = state.posts.map((post) => {\r\n          if (post._id == action.id) {\r\n            if (action.deleted) {\r\n              let newLikes = post.likes.filter(\r\n                (like) => like._id != action.like._id\r\n              );\r\n              return {\r\n                ...post,\r\n                likes: newLikes,\r\n              };\r\n            } else {\r\n              let newLikes = post.likes;\r\n              newLikes.push(action.like);\r\n              return {\r\n                ...post,\r\n                likes: newLikes,\r\n              };\r\n            }\r\n          }\r\n          return post;\r\n        });\r\n        return {\r\n          ...state,\r\n          posts: newPosts,\r\n        };\r\n      } else {\r\n        //Logic ffor comments like\r\n      }\r\n    }\r\n    case TOGGLE_LIKE_FAILED: {\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","const ROOT_URL = 'https://powerful-hamlet-85569.herokuapp.com/api';\r\n\r\nconst URLS = {\r\n  fetchposts: (page = 1, limit = 5) =>\r\n    ROOT_URL + `/posts?page=${page}&limit=${limit}`,\r\n  login: () => ROOT_URL + '/users/login',\r\n  signup: () => ROOT_URL + '/users/signup',\r\n  editProfile: () => ROOT_URL + '/users/edit',\r\n  fetchProfile: (id) => ROOT_URL + `/users/${id}`,\r\n  fetchFriends: () => ROOT_URL + '/friendship/fetch_user_friends',\r\n  AddFriend: (id) => ROOT_URL + `/friendship/create_friendship?user_id=${id}`,\r\n  RemoveFriend: (id) =>\r\n    ROOT_URL + `/friendship/remove_friendship?user_id=${id}`,\r\n  createPost: () => ROOT_URL + '/posts/create',\r\n  createComment: () => ROOT_URL + '/comments',\r\n  toggleLike: (id, type) => ROOT_URL + `/likes/toggle?id=${id}&type=${type}`,\r\n  SearchUsers: (text) => ROOT_URL + `/users/search?text=${text}`,\r\n};\r\nexport default URLS;\r\n","import {\r\n  LOGIN_FAILED,\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_PROFILE_SUCCESS,\r\n  EDIT_PROFILE_FAILED,\r\n} from './actionTypes';\r\nimport URL from '../helper/urls';\r\n\r\nconst url = URL.login();\r\n\r\nexport function authorizeuser(data) {\r\n  console.log(data);\r\n  return (dispatch) => {\r\n    dispatch(login_start());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          localStorage.setItem('token', data.data.token);\r\n          setTimeout(() => {\r\n            dispatch(login_success(data.data.user));\r\n          }, 1000);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(login_failed(data.error));\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function login_start(data) {\r\n  // console.log(user_info);\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\nexport function login_success(user) {\r\n  // console.log(user_info);\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\nexport function login_failed(error) {\r\n  // console.log('failed due to', error);\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n\r\nexport function AuthenticateUser(user) {\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n}\r\nexport function clearauthstate() {\r\n  return {\r\n    type: CLEAR_AUTH_STATE,\r\n  };\r\n}\r\n","import { ADD_POST_FAILED, ADD_POST_SUCCESS, UPDATE_POSTS } from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function fetchposts(page = 1) {\r\n  const url = URL.fetchposts(page);\r\n  return (dispatch) => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        let next = data.next;\r\n        let prev = data.prev;\r\n        if (typeof next == 'undefined') {\r\n          next = null;\r\n        }\r\n        if (typeof prev == 'undefined') {\r\n          prev = null;\r\n        }\r\n        dispatch(updatePosts(data.data.posts, next, prev));\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function updatePosts(posts, next, prev) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts: posts,\r\n    next: next,\r\n    prev: prev,\r\n  };\r\n}\r\n\r\nexport function createPost(content) {\r\n  const url = URL.createPost();\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        content: content,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(create_post_success(data.data.post));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(create_post_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function create_post_success(post) {\r\n  return {\r\n    type: ADD_POST_SUCCESS,\r\n    post: post,\r\n  };\r\n}\r\nexport function create_post_failed(error) {\r\n  return {\r\n    type: ADD_POST_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import { ADD_COMMENT_FAILED, ADD_COMMENT_SUCCESS } from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function createComment(content, id) {\r\n  const url = URL.createComment();\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        content: content,\r\n        post_id: id,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(create_comment_success(data.comment, id));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(create_comment_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function create_comment_success(comment, id) {\r\n  return {\r\n    type: ADD_COMMENT_SUCCESS,\r\n    comment: comment,\r\n    post_id: id,\r\n  };\r\n}\r\nexport function create_comment_failed(error) {\r\n  return {\r\n    type: ADD_COMMENT_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import { TOGGLE_LIKE_SUCCESS, TOGGLE_LIKE_FAILED } from './actionTypes';\r\nimport URL from '../helper/urls';\r\n\r\nexport function toggleLike(id, type) {\r\n  const url = URL.toggleLike(id, type);\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(\r\n              toggle_like_success(\r\n                data.data.deleted,\r\n                id,\r\n                type,\r\n                data.data.liketosent\r\n              )\r\n            );\r\n          }, 50);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(toggle_like_failed(data.error));\r\n          }, 50);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function toggle_like_success(deleted, id, type, like) {\r\n  return {\r\n    type: TOGGLE_LIKE_SUCCESS,\r\n    deleted: deleted,\r\n    id: id,\r\n    likeabletype: type,\r\n    like: like,\r\n  };\r\n}\r\nexport function toggle_like_failed(error) {\r\n  return {\r\n    type: TOGGLE_LIKE_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Comment extends Component {\r\n  render() {\r\n    const { comment } = this.props;\r\n    return (\r\n      <div className=\"comment\">\r\n        <div className=\"name-time\">{comment.user.name} a minute ago</div>\r\n        <div className=\"comment-content\">{comment.content}</div>\r\n        <div className=\"comment-likes-count\">\r\n          <img src=\"https://cdn-icons-png.flaticon.com/512/633/633759.png\"></img>\r\n          {comment.likes.length}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapToState)(Comment);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createComment } from '../actions/comment';\r\nimport { toggleLike } from '../actions/likes';\r\nimport Comment from './Comment';\r\n\r\nclass Post extends Component {\r\n  constructor(s) {\r\n    super();\r\n    this.state = {\r\n      content: '',\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    let content = e.target.value;\r\n    this.setState({\r\n      content: content,\r\n    });\r\n  };\r\n  handleAddcomment = (e) => {\r\n    const { post } = this.props;\r\n    if (this.state.content !== '' && e.key == 'Enter') {\r\n      this.props.dispatch(createComment(this.state.content, post._id));\r\n      this.setState({\r\n        content: '',\r\n      });\r\n    }\r\n  };\r\n  handleToggleLike = () => {\r\n    const { post } = this.props;\r\n    this.props.dispatch(toggleLike(post._id, 'Post'));\r\n  };\r\n  isLikedByUser = () => {\r\n    const { post } = this.props;\r\n    const { user } = this.props.auth;\r\n    let i;\r\n    for (i = 0; i < post.likes.length; i++) {\r\n      if (post.likes[i].user == user._id) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    const { post } = this.props;\r\n    let liked = this.isLikedByUser();\r\n    console.log('LIKED', liked);\r\n    return (\r\n      <div className=\"Post\">\r\n        <div className=\"user-info\">\r\n          <Link to={`/SocialSiteFrontendReact/user/${post.user._id}`}>\r\n            <img\r\n              src=\"https://cdn-icons-png.flaticon.com/512/560/560216.png\"\r\n              className=\"post-icon\"\r\n            ></img>\r\n          </Link>\r\n          <div className=\"post-user-name\">\r\n            {post.user.name}\r\n            <div className=\"time\">a minute ago</div>\r\n          </div>\r\n        </div>\r\n        <p className=\"post-content\">{post.content}</p>\r\n        <div className=\"likes-comment-icon\">\r\n          <img\r\n            onClick={this.handleToggleLike}\r\n            src={\r\n              liked\r\n                ? 'https://cdn-icons-png.flaticon.com/512/1076/1076984.png'\r\n                : 'https://cdn-icons-png.flaticon.com/512/1077/1077035.png'\r\n            }\r\n          ></img>\r\n          <div className=\"likes-count\">{post.likes.length}</div>\r\n          <img src=\"https://cdn-icons-png.flaticon.com/512/1380/1380338.png\"></img>\r\n          <div className=\"comments-count\">{post.comment.length}</div>\r\n        </div>\r\n        <div className=\"comments\">\r\n          <input\r\n            onChange={this.handleChange}\r\n            onKeyPress={this.handleAddcomment}\r\n            onk\r\n            className=\"comments-form\"\r\n            placeholder=\"Type your comment here\"\r\n          ></input>\r\n          {post.comment.map((comment) => (\r\n            <Comment comment={comment} key={comment._id} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapTostate(state) {\r\n  return {\r\n    auth: state.auth,\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapTostate)(Post);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createPost } from '../actions/posts';\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post_content: '',\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      post_content: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    let content = this.state.post_content;\r\n    if (content.length != 0) {\r\n      this.props.dispatch(createPost(content));\r\n    }\r\n  };\r\n  render() {\r\n    const { error } = this.props.posts;\r\n    return (\r\n      <div className=\"post-form-container\">\r\n        {error == false && (\r\n          <div className=\"success-dialog\">Post Created Successfully</div>\r\n        )}\r\n        {error && <div className=\"alert-dialog\">{error}</div>}\r\n        <div className=\"post-input-container\">\r\n          <textarea\r\n            onChange={(e) => this.handleChange(e)}\r\n            placeholder=\"What's in your mind?\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"post-btn-container\">\r\n          <div onClick={this.handleSubmit} className=\"post-btn\">\r\n            Add Post\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapToState)(CreatePost);\r\n","import React, { Component } from 'react';\r\nimport Post from './Post';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport CreatePost from './CreatePost';\r\nimport { fetchposts } from '../actions/posts';\r\n\r\nclass PostsList extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchposts());\r\n  }\r\n  render() {\r\n    const { posts, error } = this.props.posts;\r\n    const { isLoggedIn } = this.props.auth;\r\n    console.log('PostList RENDERED');\r\n    return (\r\n      <div className=\"post-list1\">\r\n        {isLoggedIn && <CreatePost />}\r\n        <div className=\"Post-list\">\r\n          {posts.map((post) => (\r\n            <Post key={post._id} post={post} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapToState)(PostsList);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SearchResult extends Component {\r\n  render() {\r\n    const { result } = this.props;\r\n    console.log('RESULT', result);\r\n    return (\r\n      <Link to={`/SocialSiteFrontendReact/user/${result._id}`}>\r\n        <div className=\"result\">\r\n          <img src=\"https://cdn-icons-png.flaticon.com/512/2922/2922506.png\"></img>\r\n          <div>{result.name}</div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n","import { FETCH_SEARCH_USERS, CLEAR_SERACH } from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function SearchUsers(text) {\r\n  const url = URL.SearchUsers(text);\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        dispatch(updateSearch(data.data.users));\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function updateSearch(searchResults) {\r\n  return {\r\n    type: FETCH_SEARCH_USERS,\r\n    results: searchResults,\r\n  };\r\n}\r\nexport function clearSearch() {\r\n  return {\r\n    type: CLEAR_SERACH,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearSearch, SearchUsers } from '../actions/search';\r\nimport SearchResult from './SearchResult';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleChange = (e) => {\r\n    let text = e.target.value;\r\n    if (text !== '') {\r\n      this.props.dispatch(SearchUsers(text));\r\n    } else {\r\n      this.props.dispatch(clearSearch());\r\n    }\r\n  };\r\n  render() {\r\n    const { results } = this.props.search;\r\n    console.log('RESULTS', results);\r\n    return (\r\n      <div className=\"search\">\r\n        <input onChange={this.handleChange} placeholder=\"Search name\"></input>\r\n        {results.length != 0 && (\r\n          <div className=\"search-results\">\r\n            {results.map((result) => {\r\n              return <SearchResult result={result} key={result._id} />;\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    search: state.search,\r\n  };\r\n}\r\nexport default connect(mapToState)(Search);\r\n","import React, { Component } from 'react';\r\nimport SearchResult from './SearchResult';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { logout } from '../actions/auth';\r\n\r\nimport Search from './Search';\r\nclass Navbar extends Component {\r\n  logOut = () => {\r\n    localStorage.removeItem('token');\r\n    this.props.dispatch(logout());\r\n  };\r\n  render() {\r\n    const { isLoggedIn, user } = this.props.auth;\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"nav-left-container\">\r\n          <Link to=\"/SocialSiteFrontendReact/\">\r\n            <img\r\n              src=\"https://cdn-icons-png.flaticon.com/512/2111/2111421.png\"\r\n              className=\"logo\"\r\n            ></img>\r\n          </Link>\r\n          <div className=\"site-name\">Socializer</div>\r\n        </div>\r\n        <div className=\"nav-middle-container\">\r\n          <Search />\r\n        </div>\r\n        <div className=\"nav-right-container\">\r\n          {isLoggedIn && (\r\n            <div className=\"user-nav\">\r\n              <Link to=\"/SocialSiteFrontendReact/settings\">\r\n                <img\r\n                  src=\"https://cdn-icons-png.flaticon.com/512/2922/2922506.png\"\r\n                  className=\"user-logo\"\r\n                ></img>\r\n              </Link>\r\n              <div className=\"username-nav\">{user.name}</div>\r\n            </div>\r\n          )}\r\n          {isLoggedIn == false && (\r\n            <Link className=\"nav-btn\" to=\"/SocialSiteFrontendReact/login\">\r\n              <div>LogIn</div>\r\n            </Link>\r\n          )}\r\n          {isLoggedIn && (\r\n            <button onClick={this.logOut} className=\"logout-btn\">\r\n              LogOut\r\n            </button>\r\n          )}\r\n          {isLoggedIn == false && (\r\n            <Link className=\"nav-btn\" to=\"/SocialSiteFrontendReact/Register\">\r\n              <div>Register</div>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapToState)(Navbar);\r\n","import {\r\n  FETCH_USER_FRIENDS_BEGIN,\r\n  FETCH_USER_FRIENDS_SUCCESS,\r\n  FETCH_USER_FRIENDS_FAILED,\r\n  ADD_FRIEND_BEGIN,\r\n  ADD_FRIEND_FAILED,\r\n  ADD_FRIEND_SUCCESS,\r\n  REMOVE_FRIEND_BEGIN,\r\n  REMOVE_FRIEND_FAILED,\r\n  REMOVE_FRIEND_SUCCESS,\r\n  UPDATE_POSTS,\r\n  CLEAR_FRIEND_STATE,\r\n} from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function fetchFriends() {\r\n  return (dispatch) => {\r\n    const url = URL.fetchFriends();\r\n    const token = localStorage.getItem('token');\r\n    dispatch(fetch_friends_begin());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'GET',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Data', data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(fetch_friends_success(data.data.friendships));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(fetch_friends_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function fetch_friends_success(friendships) {\r\n  return {\r\n    type: FETCH_USER_FRIENDS_SUCCESS,\r\n    friendships: friendships,\r\n  };\r\n}\r\n\r\nexport function fetch_friends_begin() {\r\n  return {\r\n    type: FETCH_USER_FRIENDS_BEGIN,\r\n  };\r\n}\r\nexport function fetch_friends_failed(error) {\r\n  return {\r\n    type: FETCH_USER_FRIENDS_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n\r\nexport function AddFriend(id) {\r\n  return (dispatch) => {\r\n    const url = URL.AddFriend(id);\r\n    const token = localStorage.getItem('token');\r\n    dispatch(add_friend_begin());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Data', data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(add_friend_success(data.data.friendship));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(add_friend_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function add_friend_success(friendship) {\r\n  return {\r\n    type: ADD_FRIEND_SUCCESS,\r\n    friendship: friendship,\r\n  };\r\n}\r\n\r\nexport function add_friend_begin() {\r\n  return {\r\n    type: ADD_FRIEND_BEGIN,\r\n  };\r\n}\r\nexport function add_friend_failed(error) {\r\n  return {\r\n    type: ADD_FRIEND_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n\r\nexport function clear_friend_state() {\r\n  return {\r\n    type: CLEAR_FRIEND_STATE,\r\n  };\r\n}\r\n\r\nexport function RemoveFriend(id) {\r\n  return (dispatch) => {\r\n    const url = URL.RemoveFriend(id);\r\n    const token = localStorage.getItem('token');\r\n    dispatch(remove_friend_begin());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Data', data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(remove_friend_success(data.removed_id));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(remove_friend_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function remove_friend_success(id) {\r\n  return {\r\n    type: REMOVE_FRIEND_SUCCESS,\r\n    id: id,\r\n  };\r\n}\r\n\r\nexport function remove_friend_begin() {\r\n  return {\r\n    type: REMOVE_FRIEND_BEGIN,\r\n  };\r\n}\r\nexport function remove_friend_failed(error) {\r\n  return {\r\n    type: REMOVE_FRIEND_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Friend extends Component {\r\n  render() {\r\n    const { friend } = this.props;\r\n    return (\r\n      <div className=\"friend\">\r\n        <div className=\"friend-icon\">\r\n          <Link to={`/SocialSiteFrontendReact/user/${friend._id}`}>\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/2922/2922506.png\"></img>\r\n          </Link>\r\n        </div>\r\n        <div className=\"friend-name\">\r\n          <div>{friend.name}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Friend;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { clear_friend_state, fetchFriends } from '../actions/friends';\r\nimport Friend from './Friend';\r\n\r\nclass FriendList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clear_friend_state());\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchFriends());\r\n  }\r\n  render() {\r\n    const { friendships, inProgress, error } = this.props.friends;\r\n    const signeduser = this.props.auth.user;\r\n    if (inProgress) {\r\n      return <h1>Fetching User Friends!</h1>;\r\n    }\r\n    if (error) {\r\n      return <h1>{error}</h1>;\r\n    }\r\n    return (\r\n      <div className=\"friends-container\">\r\n        <div className=\"friends-heading\">Friends</div>\r\n        {friendships.map((friendship) => {\r\n          let friend = friendship.from_user;\r\n          if (friend._id == signeduser._id) {\r\n            friend = friendship.to_user;\r\n          }\r\n          return <Friend friend={friend} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    friends: state.friends,\r\n  };\r\n}\r\n\r\nexport default connect(mapToState)(FriendList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchposts } from '../actions/posts';\r\n\r\nclass Footer extends Component {\r\n  handlenextclick = () => {\r\n    const { next } = this.props.posts;\r\n    this.props.dispatch(fetchposts(next.page));\r\n  };\r\n  handleprevclick = () => {\r\n    const { prev } = this.props.posts;\r\n    this.props.dispatch(fetchposts(prev.page));\r\n  };\r\n  render() {\r\n    const { posts } = this.props.posts;\r\n    const { next, prev } = this.props.posts;\r\n\r\n    return (\r\n      <div className=\"Footer-container\">\r\n        <div className=\"footer-btns\">\r\n          <button\r\n            onClick={this.handleprevclick}\r\n            className={prev ? 'fbtn' : 'fbtn hidebtn'}\r\n          >\r\n            &lt;\r\n          </button>\r\n          <button\r\n            onClick={this.handlenextclick}\r\n            className={next ? 'fbtn' : 'fbtn hidebtn'}\r\n          >\r\n            &gt;\r\n          </button>\r\n        </div>\r\n        <div className=\"footer\">&copy; 2021 Apoorv Jain</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapTostate(state) {\r\n  return {\r\n    posts: state.posts,\r\n  };\r\n}\r\nexport default connect(mapTostate)(Footer);\r\n","import { func } from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport FriendList from './FriendList';\r\nimport { connect } from 'react-redux';\r\nimport PostsList from './PostsList';\r\nimport { fetchposts } from '../actions/posts';\r\nimport Footer from './Footer';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { isLoggedIn } = this.props.auth;\r\n    console.log('props', this.props);\r\n    return (\r\n      <div className=\"home\">\r\n        <PostsList />\r\n        {isLoggedIn && <FriendList />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapToState)(Home);\r\n","import React from 'react';\r\n\r\nfunction Page404(props) {\r\n  return (\r\n    <div>\r\n      <h1>404: Page not found</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { authorizeuser, clearauthstate } from '../actions/auth';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.emailInputref = React.createRef();\r\n    // this.passwordInputref = React.createRef();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n  handleEmailInput = (e) => {\r\n    let email = e.target.value;\r\n    this.setState({\r\n      email: email,\r\n    });\r\n  };\r\n  handlePasswordInput = (e) => {\r\n    let password = e.target.value;\r\n    this.setState({\r\n      password: password,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log('emailref', this.emailInputref);\r\n    // console.log('passwordref', this.passwordInputref);\r\n    console.log(this.state);\r\n    this.props.dispatch(authorizeuser(this.state));\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearauthstate());\r\n  }\r\n  render() {\r\n    const { error, inProgress, user, isLoggedIn } = this.props.auth;\r\n    const { from } = this.props.location.state || {\r\n      from: { pathname: '/SocialSiteFrontendReact/' },\r\n    };\r\n    if (isLoggedIn) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    console.log(this.props.auth);\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login-heading\">Login</div>\r\n        {error && <div className=\"alert-dialog\">{error}</div>}\r\n        {isLoggedIn && (\r\n          <div className=\"success-dialog\">{`Successfully signed in as ${user.name}`}</div>\r\n        )}\r\n        <form className=\"login-form\">\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n            onChange={this.handleEmailInput}\r\n            // ref={this.emailInputref}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Enter your password\"\r\n            onChange={this.handlePasswordInput}\r\n            // ref={this.passwordInputref}\r\n          ></input>\r\n          {inProgress ? (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-btn\"\r\n              onClick={this.handleSubmit}\r\n              disabled={inProgress}\r\n            >\r\n              Logging In\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-btn\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Log In\r\n            </button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapToState)(Login);\r\n","import { SIGNUP_FAILED, SIGNUP_START, SIGNUP_SUCCESS } from './actionTypes';\r\nimport URL from '../helper/urls';\r\n\r\nconst url = URL.signup();\r\n\r\nexport function createuser(data) {\r\n  console.log(data);\r\n  return (dispatch) => {\r\n    dispatch(signup_start());\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password,\r\n        confirmpassword: data.confirmpassword,\r\n        name: data.name,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            localStorage.setItem('token', data.data.token);\r\n            dispatch(signup_success(data.data.user));\r\n          }, 1000);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(signup_failed(data.error));\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function signup_start() {\r\n  // console.log(user_info);\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\nexport function signup_success(user) {\r\n  // console.log(user_info);\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\nexport function signup_failed(error) {\r\n  // console.log('failed due to', error);\r\n  return {\r\n    type: SIGNUP_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { authorizeuser, clearauthstate } from '../actions/auth';\r\nimport { createuser } from '../actions/Sign_up_auth';\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.emailInputref = React.createRef();\r\n    // this.passwordInputref = React.createRef();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      confirmpassword: '',\r\n      name: '',\r\n    };\r\n  }\r\n  handleEmailInput = (e) => {\r\n    let email = e.target.value;\r\n    this.setState({\r\n      email: email,\r\n    });\r\n  };\r\n  handleConfirmPasswordInput = (e) => {\r\n    let confirmpassword = e.target.value;\r\n    this.setState({\r\n      confirmpassword: confirmpassword,\r\n    });\r\n  };\r\n  handleNameInput = (e) => {\r\n    let name = e.target.value;\r\n    this.setState({\r\n      name: name,\r\n    });\r\n  };\r\n  handlePasswordInput = (e) => {\r\n    let password = e.target.value;\r\n    this.setState({\r\n      password: password,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log('emailref', this.emailInputref);\r\n    // console.log('passwordref', this.passwordInputref);\r\n    console.log(this.state);\r\n    this.props.dispatch(createuser(this.state));\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearauthstate());\r\n  }\r\n  render() {\r\n    const { error, inProgress, user, isLoggedIn } = this.props.auth;\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/SocialSiteFrontendReact\" />;\r\n    }\r\n    console.log(this.props.auth);\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login-heading\">SignUp</div>\r\n        {error && <div className=\"alert-dialog\">{error}</div>}\r\n        {isLoggedIn && (\r\n          <div className=\"success-dialog\">{`Successfully signed in as ${user.user.name}`}</div>\r\n        )}\r\n        <form className=\"login-form\">\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Enter your name\"\r\n            onChange={this.handleNameInput}\r\n            // ref={this.emailInputref}\r\n          ></input>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n            onChange={this.handleEmailInput}\r\n            // ref={this.emailInputref}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Enter your password\"\r\n            onChange={this.handlePasswordInput}\r\n            // ref={this.passwordInputref}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Enter password again\"\r\n            onChange={this.handleConfirmPasswordInput}\r\n            // ref={this.passwordInputref}\r\n          ></input>\r\n          {inProgress ? (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-btn\"\r\n              onClick={this.handleSubmit}\r\n              disabled={inProgress}\r\n            >\r\n              Signing Up\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-btn\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Sign Up\r\n            </button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\n\r\nexport default connect(mapToState)(SignUp);\r\n","import { EDIT_PROFILE_FAILED, EDIT_PROFILE_SUCCESS } from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nconst url = URL.editProfile();\r\n\r\nexport function edit_user_profile(name, password, confirmpassword, id) {\r\n  console.log(id);\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'POST',\r\n\r\n      // Adding body or contents to send\r\n      body: JSON.stringify({\r\n        name: name,\r\n        password: password,\r\n        confirmpassword: confirmpassword,\r\n        id: '' + id,\r\n      }),\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          localStorage.setItem('token', data.data.token);\r\n          setTimeout(() => {\r\n            dispatch(edit_profile_success(data.data.user));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(edit_profile_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function edit_profile_success(user) {\r\n  return {\r\n    type: EDIT_PROFILE_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function edit_profile_failed(error) {\r\n  return {\r\n    type: EDIT_PROFILE_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { clearauthstate } from '../actions/auth';\r\nimport {\r\n  edit_profile_failed,\r\n  edit_user_profile,\r\n} from '../actions/edit_profile';\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editmode: false,\r\n      name: props.auth.user.name,\r\n      password: '',\r\n      confirmpassword: '',\r\n    };\r\n  }\r\n  handleChange = (val, fieldname) => {\r\n    this.setState({\r\n      [fieldname]: val,\r\n    });\r\n  };\r\n  handleEdit = () => {\r\n    this.setState({\r\n      editmode: true,\r\n    });\r\n  };\r\n  handleBack = () => {\r\n    this.setState({\r\n      editmode: false,\r\n    });\r\n  };\r\n  fun = () => {\r\n    const { error } = this.props.auth;\r\n    if (error == false) {\r\n      this.setState({\r\n        editmode: false,\r\n      });\r\n    }\r\n  };\r\n  handleSave = () => {\r\n    const { name, password, confirmpassword } = this.state;\r\n    if (\r\n      name.length == 0 ||\r\n      password.length == 0 ||\r\n      confirmpassword != password\r\n    ) {\r\n      this.props.dispatch(edit_profile_failed('Invalid Input'));\r\n    } else {\r\n      const id = this.props.auth.user._id;\r\n      console.log('Success', id);\r\n      this.props.dispatch(\r\n        edit_user_profile(name, password, confirmpassword, id)\r\n      );\r\n      setTimeout(this.fun, 1000);\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearauthstate());\r\n  }\r\n  render() {\r\n    const { editmode } = this.state;\r\n    const { user, error, profile_changed } = this.props.auth;\r\n    console.log(editmode);\r\n    return (\r\n      <div className=\"setting-container\">\r\n        <div className=\"user-icon\">\r\n          <img src=\"https://cdn-icons-png.flaticon.com/512/2922/2922506.png\"></img>\r\n        </div>\r\n        {error && <div className=\"alert-dialog\">{error}</div>}\r\n        {error == false && editmode == true && (\r\n          <div className=\"success-dialog\">Successfully Updated</div>\r\n        )}\r\n        <div className=\"show-field\">\r\n          <div className=\"show-field-heading\">Email</div>\r\n          <div className=\"show-field-input\">{user.email}</div>\r\n        </div>\r\n        {editmode == false && (\r\n          <div className=\"show-field\">\r\n            <div className=\"show-field-heading\">Name</div>\r\n            <div className=\"show-field-input\">{user.name}</div>\r\n          </div>\r\n        )}\r\n        {editmode && (\r\n          <div className=\"show-input\">\r\n            <div className=\"show-field-heading\">Name</div>\r\n            <input\r\n              value={this.state.name}\r\n              onChange={(e) => {\r\n                this.handleChange(e.target.value, 'name');\r\n              }}\r\n            ></input>\r\n          </div>\r\n        )}\r\n        {editmode && (\r\n          <div className=\"show-input\">\r\n            <div className=\"show-field-heading\">New Password</div>\r\n            <input\r\n              onChange={(e) => {\r\n                this.handleChange(e.target.value, 'password');\r\n              }}\r\n            ></input>\r\n          </div>\r\n        )}\r\n        {editmode && (\r\n          <div className=\"show-input\">\r\n            <div className=\"show-field-heading\">Confirm Password</div>\r\n            <input\r\n              onChange={(e) => {\r\n                this.handleChange(e.target.value, 'confirmpassword');\r\n              }}\r\n            ></input>\r\n          </div>\r\n        )}\r\n        <div className=\"Button-container\">\r\n          {editmode == false && (\r\n            <button className=\"setting-btn\" onClick={this.handleEdit}>\r\n              Edit Profile\r\n            </button>\r\n          )}\r\n          {editmode && (\r\n            <button className=\"setting-btn\" onClick={this.handleSave}>\r\n              Save Profile\r\n            </button>\r\n          )}\r\n          {editmode && (\r\n            <button className=\"setting-btn\" onClick={this.handleBack}>\r\n              Go Back\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapToState)(Settings);\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILED,\r\n  USER_PROFILE_BEGIN,\r\n} from './actionTypes';\r\nimport URL from '../helper/urls';\r\nimport { logout } from './auth';\r\n\r\nexport function fetchProfile(id) {\r\n  return (dispatch) => {\r\n    const url = URL.fetchProfile(id);\r\n    dispatch(user_profile_begin());\r\n    const token = localStorage.getItem('token');\r\n    fetch(url, {\r\n      // Adding method type\r\n      method: 'GET',\r\n      // Adding headers to the request\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status == '401') {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.success) {\r\n          setTimeout(() => {\r\n            dispatch(user_profile_success(data.data.user));\r\n          }, 500);\r\n        } else {\r\n          setTimeout(() => {\r\n            dispatch(user_profile_failed(data.error));\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err) => console.log('error', err));\r\n  };\r\n}\r\n\r\nexport function user_profile_begin() {\r\n  return {\r\n    type: USER_PROFILE_BEGIN,\r\n  };\r\n}\r\n\r\nexport function user_profile_success(user) {\r\n  return {\r\n    type: USER_PROFILE_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function user_profile_failed(error) {\r\n  return {\r\n    type: USER_PROFILE_FAILED,\r\n    error: error,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchProfile } from '../actions/profile';\r\nimport {\r\n  AddFriend,\r\n  clear_friend_state,\r\n  RemoveFriend,\r\n} from '../actions/friends';\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleAddfriend = () => {\r\n    const userId = this.props.match.params.userId;\r\n    this.props.dispatch(AddFriend(userId));\r\n  };\r\n  handleRemoveFriend = () => {\r\n    const userId = this.props.match.params.userId;\r\n    this.props.dispatch(RemoveFriend(userId));\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.match.params.userId) {\r\n      this.props.dispatch(fetchProfile(this.props.match.params.userId));\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const prevparam = prevProps.match.params;\r\n    const curparam = this.props.match.params;\r\n    if (curparam && prevparam && curparam.userId !== prevparam.userId) {\r\n      this.props.dispatch(fetchProfile(curparam.userId));\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clear_friend_state());\r\n  }\r\n  checkIsUserFriend = () => {\r\n    const userId = this.props.match.params.userId;\r\n    const { user } = this.props.auth;\r\n    const { friendships } = this.props.friends;\r\n    let friendsuserids = [];\r\n    friendships.map((friendship) => {\r\n      let fid = friendship.from_user._id;\r\n      if (fid == user._id) {\r\n        fid = friendship.to_user._id;\r\n      }\r\n      friendsuserids.push(fid);\r\n    });\r\n    let indx = friendsuserids.indexOf(userId);\r\n    if (indx !== -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    let isfriend = this.checkIsUserFriend();\r\n    const profileuser = this.props.profile.user;\r\n    const signeduser = this.props.auth.user;\r\n    // console.log('PROFILE', this.props.location.aboutProps.post.user);\r\n    const { error, inProgress } = this.props.profile;\r\n    if (signeduser.email == profileuser.email) {\r\n      return <Redirect to=\"/settings\" />;\r\n    }\r\n    if (inProgress) {\r\n      return <h1>Loading!</h1>;\r\n    }\r\n    if (error) {\r\n      return <h1>{error}</h1>;\r\n    }\r\n    return (\r\n      <div className=\"setting-container\">\r\n        <div className=\"user-icon\">\r\n          <img src=\"https://cdn-icons-png.flaticon.com/512/2922/2922506.png\"></img>\r\n        </div>\r\n        {this.props.friends.error && (\r\n          <div className=\"alert-dialog\">{this.props.friends.error}</div>\r\n        )}\r\n        {this.props.friends.error == false && (\r\n          <div className=\"success-dialog\">\r\n            Successfully {isfriend ? 'added' : 'removed'} friend\r\n          </div>\r\n        )}\r\n        <div className=\"show-field\">\r\n          <div className=\"show-field-heading\">Email</div>\r\n          <div className=\"show-field-input\">{profileuser.email}</div>\r\n        </div>\r\n        <div className=\"show-field\">\r\n          <div className=\"show-field-heading\">Name</div>\r\n          <div className=\"show-field-input\">{profileuser.name}</div>\r\n        </div>\r\n        <div className=\"Button-container\">\r\n          {isfriend == false ? (\r\n            <button\r\n              className=\"add-friend-btn\"\r\n              disabled={this.props.friends.inProgress}\r\n              onClick={this.handleAddfriend}\r\n            >\r\n              {this.props.friends.inProgress ? 'Adding Friend' : 'Add Friend'}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"add-friend-btn\"\r\n              disabled={this.props.friends.inProgress}\r\n              onClick={this.handleRemoveFriend}\r\n            >\r\n              {this.props.friends.inProgress\r\n                ? 'Removing Friend'\r\n                : 'Remove Friend'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapToState(state) {\r\n  return {\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n    friends: state.friends,\r\n  };\r\n}\r\nexport default connect(mapToState)(Profile);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport posts from '../reducers/posts';\nimport { fetchposts } from '../actions/posts';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport PostsList from './PostsList';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport Page404 from './Page404';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport jwt_decode from 'jwt-decode';\nimport { AuthenticateUser, logout } from '../actions/auth';\nimport Settings from './Settings';\nimport Profile from './Profile';\nimport Footer from './Footer';\n\nconst PrivateRoute = (PrivateRouteProps) => {\n  const { isLoggedIn, path, component: Component } = PrivateRouteProps;\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        console.log('Props', props);\n        return isLoggedIn == true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/SocialSiteFrontendReact/login',\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\nclass App extends Component {\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = jwt_decode(token);\n      this.props.dispatch(AuthenticateUser(user));\n    }\n  }\n  render() {\n    const { posts, auth } = this.props;\n    console.log('loggedin', auth.isLoggedIn);\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route\n              exact={true}\n              path=\"/SocialSiteFrontendReact\"\n              render={(props) => {\n                return <Home {...props} />;\n              }}\n            />\n            <Route\n              path=\"/SocialSiteFrontendReact/login\"\n              exact\n              component={Login}\n            />\n            <Route\n              path=\"/SocialSiteFrontendReact/Register\"\n              exact\n              component={SignUp}\n            />\n            <PrivateRoute\n              path=\"/SocialSiteFrontendReact/settings\"\n              exact\n              component={Settings}\n              isLoggedIn={auth.isLoggedIn}\n            />\n            <PrivateRoute\n              path=\"/SocialSiteFrontendReact/user/:userId\"\n              exact\n              component={Profile}\n              isLoggedIn={auth.isLoggedIn}\n            />\n            <Route component={Page404} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\n//switch will check for the first matching route and if found than it dont go below it breaks from that route only\nfunction maptostate(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n  };\n}\n// the below function basically provides the store context value available as props\n//maptostate defines the attributes which are required by the component\nexport default connect(maptostate)(App);\n","import {\r\n  LOGIN_FAILED,\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  SIGNUP_START,\r\n  SIGNUP_FAILED,\r\n  SIGNUP_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_PROFILE_FAILED,\r\n  EDIT_PROFILE_SUCCESS,\r\n} from '../actions/actionTypes';\r\nconst initialAuthState = {\r\n  user: {},\r\n  error: null,\r\n  isLoggedIn: false,\r\n  inProgress: false,\r\n  profile: '',\r\n};\r\n\r\nexport default function auth(state = initialAuthState, action) {\r\n  console.log('action----->', action);\r\n  switch (action.type) {\r\n    case LOGIN_START: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        inProgress: false,\r\n        error: null,\r\n        user: action.user,\r\n      };\r\n    }\r\n    case LOGIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case SIGNUP_START: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    }\r\n    case SIGNUP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        inProgress: false,\r\n        error: null,\r\n        user: action.user,\r\n      };\r\n    }\r\n    case SIGNUP_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case AUTHENTICATE_USER: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        user: action.user,\r\n        isLoggedIn: true,\r\n      };\r\n    }\r\n    case LOG_OUT: {\r\n      return {\r\n        user: {},\r\n        error: null,\r\n        isLoggedIn: false,\r\n        inProgress: false,\r\n      };\r\n    }\r\n    case CLEAR_AUTH_STATE: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        editmode: false,\r\n      };\r\n    }\r\n    case EDIT_PROFILE_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case EDIT_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        inProgress: false,\r\n        error: false,\r\n        user: action.user,\r\n        editmode: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  CLEAR_PROFILE_STATE,\r\n  USER_PROFILE_BEGIN,\r\n  USER_PROFILE_FAILED,\r\n  USER_PROFILE_SUCCESS,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialProfileState = {\r\n  inProgress: false,\r\n  user: {},\r\n  error: null,\r\n};\r\n\r\nexport default function profile(state = initialProfileState, action) {\r\n  switch (action.type) {\r\n    case USER_PROFILE_BEGIN: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n        error: null,\r\n      };\r\n    }\r\n    case USER_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        user: action.user,\r\n        error: null,\r\n      };\r\n    }\r\n    case USER_PROFILE_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case CLEAR_PROFILE_STATE: {\r\n      return {\r\n        inProgress: false,\r\n        user: {},\r\n        error: null,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ADD_FRIEND_BEGIN,\r\n  ADD_FRIEND_FAILED,\r\n  ADD_FRIEND_SUCCESS,\r\n  CLEAR_FRIEND_STATE,\r\n  FETCH_USER_FRIENDS_BEGIN,\r\n  FETCH_USER_FRIENDS_FAILED,\r\n  FETCH_USER_FRIENDS_SUCCESS,\r\n  REMOVE_FRIEND_SUCCESS,\r\n  REMOVE_FRIEND_FAILED,\r\n  REMOVE_FRIEND_BEGIN,\r\n} from '../actions/actionTypes';\r\nconst initialFriendsState = {\r\n  friendships: [],\r\n  inProgress: false,\r\n  error: null,\r\n};\r\n\r\nexport default function friends(state = initialFriendsState, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_FRIENDS_FAILED: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    }\r\n    case FETCH_USER_FRIENDS_BEGIN: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        inProgress: true,\r\n      };\r\n    }\r\n    case FETCH_USER_FRIENDS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        inProgress: false,\r\n        friendships: action.friendships,\r\n      };\r\n    }\r\n    case ADD_FRIEND_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        inProgress: false,\r\n        friendships: [...state.friendships, action.friendship],\r\n      };\r\n    }\r\n    case ADD_FRIEND_BEGIN: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n        error: null,\r\n      };\r\n    }\r\n    case ADD_FRIEND_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    case CLEAR_FRIEND_STATE: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: null,\r\n      };\r\n    }\r\n    case REMOVE_FRIEND_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        inProgress: false,\r\n        friendships: state.friendships.filter(\r\n          (friendship) => friendship._id !== action.id\r\n        ),\r\n      };\r\n    }\r\n    case REMOVE_FRIEND_BEGIN: {\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n        error: null,\r\n      };\r\n    }\r\n    case REMOVE_FRIEND_FAILED: {\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { CLEAR_SERACH, FETCH_SEARCH_USERS } from '../actions/actionTypes';\r\n\r\nconst initialSearchState = {\r\n  results: [],\r\n};\r\n\r\nexport default function search(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_USERS: {\r\n      return {\r\n        ...state,\r\n        results: action.results,\r\n      };\r\n    }\r\n    case CLEAR_SERACH: {\r\n      return {\r\n        results: [],\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport posts from './posts';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport friends from './friends';\r\nimport search from './search';\r\nexport default combineReducers({\r\n  posts,\r\n  auth,\r\n  profile,\r\n  friends,\r\n  search,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport configureStore from './store/index';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore();\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers/index';\r\nimport logger from 'redux-logger';\r\n\r\nlet store;\r\n\r\nexport default function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(logger, thunk));\r\n  return store;\r\n}\r\n"],"sourceRoot":""}